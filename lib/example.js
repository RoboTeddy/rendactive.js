// Generated by CoffeeScript 1.4.0
(function() {
  var template, ui;

  template = _.template($('#flickr_template').text());

  ui = rendactive(template, function(createStream) {
    var firstPage, getPhotoUrl, isLoading, nexts, page, pageFlips, photos, prevs, query, results, searches;
    nexts = createStream('click .next-page');
    prevs = createStream('click .prev-page');
    pageFlips = nexts.map(1).merge(prevs.map(-1));
    query = createStream('keyup input').map(function(e) {
      return $(e.target).val();
    }).skipDuplicates().toProperty('');
    firstPage = 1;
    page = query.flatMapLatest(function() {
      return pageFlips.scan(firstPage, function(x, y) {
        return Math.max(firstPage, x + y);
      });
    }).skipDuplicates().toProperty(firstPage);
    searches = Bacon.combineTemplate({
      page: page,
      query: query
    }).filter(function(_arg) {
      var page, query;
      page = _arg.page, query = _arg.query;
      return query.length;
    });
    results = searches.throttle(200).log().flatMapLatest(function(_arg) {
      var page, query;
      page = _arg.page, query = _arg.query;
      return Bacon.fromPromise($.get('http://api.flickr.com/services/rest/', {
        method: 'flickr.photos.search',
        format: 'json',
        nojsoncallback: 1,
        api_key: '07e0436936cf6efba41e7aa162049442',
        tags: query,
        page: page,
        per_page: 16
      }));
    });
    photos = results.map(function(x) {
      var _ref;
      return x != null ? (_ref = x.photos) != null ? _ref.photo : void 0 : void 0;
    }).merge(query.filter(function(q) {
      return q === '';
    }).map(null)).toProperty(null);
    isLoading = searches.map(true).changes().merge(results.map(false)).toProperty(false);
    getPhotoUrl = function(photo, size) {
      var host;
      if (size == null) {
        size = 'q';
      }
      host = "farm" + photo.farm + ".staticflickr.com";
      return "http://" + host + "/" + photo.server + "/" + photo.id + "_" + photo.secret + "_" + size + ".jpg";
    };
    return {
      photos: photos,
      page: page,
      isLoading: isLoading,
      getPhotoUrl: getPhotoUrl
    };
  });

  $('body').append(ui.fragment);

  $('input').focus();

}).call(this);
